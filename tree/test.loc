import cppbase (id)

source Cpp from "tree.hpp" ("mlc_pack_tree" as packTree, "mlc_unpack_tree" as unpackTree)

packTree :: pack => ([n], [(Int, Int, e)], [l]) -> Tree n e l 
unpackTree :: unpack => Tree n e l -> ([n], [(Int, Int, e)], [l])

packTree Cpp   :: pack   => ([n], [("int", "int", e)], [l]) -> "Tree<$1,$2,$3>" n e l  
unpackTree Cpp :: unpack => "Tree<$1,$2,$3>" n e l -> ([n], [("int", "int", e)], [l])

export foo
foo :: Tree Int Real Str -> Tree Int Real Str
foo Cpp :: "Tree<$1,$2,$3>" "int" "double" "std::string" -> "Tree<$1,$2,$3>" "int" "double" "std::string"
foo xs = id xs
