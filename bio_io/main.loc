module bio_io {

source Cpp from "fastaIO.hpp" ("readFasta", "writeFasta")

export readFasta
export writeFasta

type (Fasta a) = [(a, Str)];
type Cpp (Fasta a) = [(a, "std::string")];

type Filename = Str;
type Cpp Filename = "std::string";

-- `readFasta` and `writeFasta` are both IO operations. The `morloc` typesystem
-- currently has no mechanism to describe this (e.g., no IO monad). I haven't
-- yet settled on an effect handling system.
readFasta :: Filename -> Fasta Str;
readFasta Cpp :: Filename -> Fasta "std::string";

writeFasta :: Fasta Str -> Str;
writeFasta Cpp :: Fasta "std::string" -> Filename;

}
